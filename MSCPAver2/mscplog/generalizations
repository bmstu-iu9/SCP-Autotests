=================================================================================
  GENERALIZED UPWARDS: (0 1 ) and (0 ) with upper config
    (Call (Check 1 )(Call ((F (1 2 ))2 )(Variable e x )))

  Generalized Pattern: 
    (Call (Check 5 )(Variable e 6 )(Call ((F (1 2 ))6 )(Variable e 7 )))
  Generalized MGUs: 
    (assign (par e 6 )()(A))
    (assign (par e 7 )((par e x ))((par e 1 )))
  Generalized Equations: 
    (AreEqual (F)((par e 6 )A)(A(par e 6 )))

*********************************************************************************

Getting negative conditions from rules set:

produce conditions:

=================================================================================
  FOLDING ATTEMPT: (0 0 0 1 ) and (0 0 0 ) with upper config
    (Call ((Check (1 3 ))5 )(Variable e 6 ))

  Generalized Pattern: 
    (Call ((Check (1 3 ))5 )(Variable e 6 ))
  Generalized MGUs: 
    (assign (par e 6 )((par e 6 ))((par e 10 )))
  Generalized Equations: 
    (AreEqual (F)((par e 6 )A)(A(par e 6 )))
********************************************************************************

Looped To (0 0 0 )With (assign (par e 6 )((par e 10 )))and (Generic (AreEqual (F)((par e 6 )A)(A(par e 6 ))))(Negative )
  Checking embedding:



  Equations are preserved:
    (AreEqual (F)((par e 6 )A)(A(par e 6 )))

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 0 1 ) and (0 0 ) with upper config
    (Call (Check 5 )(Variable e 6 )(Call ((F (1 2 ))6 )(Variable e 7 )))

  Generalized Pattern: 
    (Call (Check 11 )(Variable e 21 )(Call ((F (1 2 ))12 )(Variable e 22 )))
  Generalized MGUs: 
    (assign (par e 21 )((par e 6 ))((par e 6 )A))
    (assign (par e 22 )((par e 7 ))((par e 8 )))
  Generalized Equations: 
    (AreEqual (F)((par e 21 )A)(A(par e 21 )))
********************************************************************************

Looped To (0 0 )With (assign (par e 6 )((par e 21 )))(assign (par e 7 )((par e 22 )))and (Generic (AreEqual (F)((par e 21 )A)(A(par e 21 ))))(Negative )
  Checking embedding:



  Equations are preserved:
    (AreEqual (F)((par e 6 )A)(A(par e 6 )))

  Inequalities are preserved:
