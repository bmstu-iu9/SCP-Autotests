*$MST_FROM_ENTRY;
*$MATCHING ForRepeatedSpecialization;
**$STRATEGY Applicative;
**$TRANSIENT Yes;

$ENTRY Go
	{ (e.Rules)s.Z
		= <Eq (e.Rules)((var x)(var y))(A (var x)(var x))>;
	}


Eq {
	(/* EMPTY */)(/*EMPTY*/)(/*EMPTY*/) = True;
	(e.Rl)((var e.x) e.LHS)(/*EMPTY*/)
		= <Eq (e.Rl)(<subst (assign (var e.x)(/* EMPTY */))(/*EMPTY*/)(e.LHS)>)(/*EMPTY*/)>;
	(e.Rl)(/*EMPTY*/)((var e.x) e.RHS)
		= <Eq (e.Rl)(/*EMPTY*/)(<subst (assign (var e.x)(/* EMPTY */))(/*EMPTY*/)(e.RHS)>)>;
	(0 e.R1)((var e.x) e.LHS)(s.Sym e.RHS)
		= <Eq (e.R1)
		<Sim (<subst (assign (var e.x)(s.Sym (var e.x)))((var e.x))(e.LHS)>)
		(<subst (assign (var e.x)(s.Sym (var e.x)))(/*EMPTY*/)(e.RHS)>)
		>>;
	(1 e.R1)((var e.x) e.LHS)(s.Sym e.RHS)
		= <Eq (e.R1)
		<Sim (<subst (assign (var e.x)(/* EMPTY */))(/*EMPTY*/)(e.LHS)>)
		(<subst (assign (var e.x)(/* EMPTY */))(/*EMPTY*/)(s.Sym e.RHS)>)
		>>;
	(0 e.R1)(s.Sym e.LHS)((var e.x) e.RHS)
		= <Eq (e.R1)
		<Sim (<subst (assign (var e.x)(s.Sym (var e.x)))(/*EMPTY*/)(e.LHS)>)
		(<subst (assign (var e.x)(s.Sym (var e.x)))((var e.x))(e.RHS)>)
		>>;
	(1 e.R1)(s.Sym e.LHS)((var e.x) e.RHS)
		= <Eq (e.R1)
		<Sim (<subst (assign (var e.x)(/* EMPTY */))(/*EMPTY*/)(s.Sym e.LHS)>)
		(<subst (assign (var e.x)(/* EMPTY */))(/*EMPTY*/)(e.RHS)>)
		>>;
	(0 e.R1)((var e.x) e.LHS)((var e.y) e.RHS)
		= <Eq (e.R1)
		<Sim (<subst (assign (var e.x)((var e.y) (var e.x)))((var e.x))(e.LHS)>)
		(<subst (assign (var e.x)((var e.y) (var e.x)))(/*EMPTY*/)(e.RHS)>)
		>>;
	(1 e.R1)((var e.x) e.LHS)((var e.y) e.RHS)
		= <Eq (e.R1)
		<Sim (<subst (assign (var e.y)((var e.x)(var e.y)))(/*EMPTY*/)(e.LHS)>)
		(<subst (assign (var e.y)((var e.x) (var e.y)))((var e.y))(e.RHS)>)
		>>;
	(2 e.R1)((var e.x) e.LHS)((var e.y) e.RHS)
		= <Eq (e.R1)
		<Sim (<subst (assign (var e.x)(/* EMPTY */))(/*EMPTY*/)(e.LHS)>)
		(<subst (assign (var e.x)(/* EMPTY */))(/*EMPTY*/)((var e.y )e.RHS)>)
		>>;
	(3 e.R1)((var e.x) e.LHS)((var e.y) e.RHS)
		= <Eq (e.R1)
		<Sim (<subst (assign (var e.y)(/* EMPTY */))(/*EMPTY*/)((var e.x)e.LHS)>)
		(<subst (assign (var e.y)(/* EMPTY */))(/*EMPTY*/)(e.RHS)>)
		>>;
	(/*EMPTY*/)e.Other = False;
}

subst {
	(assign t.var (e.val))(e.Result) (/*EMPTY*/) = e.Result;
	(assign (var s.n) (e.val))(e.Result) ((var s.n) e.Rest) = <subst (assign (var s.n) (e.val))(e.Result e.val) (e.Rest)>;
	(assign t.var (e.val))(e.Result) (t.other e.Rest) = <subst (assign t.var (e.val))(e.Result t.other) (e.Rest)>;
}

Sim {
	(s.x e.LHS)(s.x e.RHS)
		= <Sim (e.LHS)(e.RHS)>;
	((var s.n) e.LHS)((var s.n) e.RHS)
		= <Sim (e.LHS)(e.RHS)>;
	(e.x)(e.y) = (e.x)(e.y);
}